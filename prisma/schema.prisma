// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//model TestProfile {
//  id  String @id @default(uuid())
// name  String
//}

model Product {
  id           String     @id @default(uuid()) @map("_id")
  name        String
  company     String
  description String
  featured   Boolean
  image       String
  price       Int
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  clerkId  String
  favorites   Favorites[]
  reviews      Review[]
  cartItems   CartItem[]
}

model Favorites {
  id        String      @id @default(uuid()) @map("_id")
  clerkId  String
  productId     String
  product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}

model Review {
  id String @id @default(uuid()) @map("_id")
  clerkId String 
  productId   String
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  rating      Int
  comment  String
  authorName String
  authorImageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
}

model Cart {
  id            String @id @default(uuid()) @map("_id")
  clerkId       String
  cartItems     CartItem[]
  numItemsInCart  Int @default(0)
  cartTotal     Float @default(0)
  shipping      Float @default(5)
  tax           Float @default(0)
  taxRate       Float @default(0.1)
  orderTotal    Float @default(0)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model CartItem {
  id String @id @default(uuid()) @map("_id")
  productId   String
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  cartId      String
  cart        Cart @relation(fields: [cartId], references: [id], onDelete: Cascade)
  amount      Int @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  }


model Order {
  id            String @id @default(uuid()) @map("_id")
  clerkId       String
  products      Int  @default(0)
  orderTotal    Int @default(0)
  tax           Int @default(0)
  shipping      Int @default(0)
  email         String
  isPaid        Boolean @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// npx prisma db push